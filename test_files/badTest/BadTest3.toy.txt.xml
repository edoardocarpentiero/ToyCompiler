<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Program>
    <VarDecl>
        <Type>(FLOAT)</Type>
        <IdInit>
            <Identifier>(ID ,primo)</Identifier>
        </IdInit>
        <IdInit>
            <Identifier>(ID ,secondo)</Identifier>
        </IdInit>
        <IdInitAssign>
            <Identifier>(ID ,tot)</Identifier>
            <ExprOpIntConst>(INT_CONST, 0)</ExprOpIntConst>
        </IdInitAssign>
        <IdInitAssign>
            <Identifier>(ID ,tot2)</Identifier>
            <ExprOpIntConst>(INT_CONST, 0)</ExprOpIntConst>
        </IdInitAssign>
    </VarDecl>
    <VarDecl>
        <Type>(INT)</Type>
        <IdInit>
            <Identifier>(ID ,i)</Identifier>
        </IdInit>
    </VarDecl>
    <Proc>
        <Identifier>(ID ,moltiplica)</Identifier>
        <ParDeclList>
            <ParDecl>
                <Type>(INT)</Type>
                <Identifier>(ID ,a)</Identifier>
            </ParDecl>
            <ParDecl>
                <Type>(FLOAT)</Type>
                <Identifier>(ID ,asd)</Identifier>
            </ParDecl>
        </ParDeclList>
        <ResultTypeList>
            <ResultType>
                <Type>(FLOAT)</Type>
            </ResultType>
            <ResultType>
                <Type>(FLOAT)</Type>
            </ResultType>
        </ResultTypeList>
        <BodyProc>
            <WriteStatement>
                <ExprOpStringConst>(STRING_CONST, Inserire il primo argomento:\n)</ExprOpStringConst>
            </WriteStatement>
            <ReadlnStatement>
                <Identifier>(ID ,primo)</Identifier>
            </ReadlnStatement>
            <WriteStatement>
                <ExprOpStringConst>(STRING_CONST, Inserire il secondo argomento:\n)</ExprOpStringConst>
            </WriteStatement>
            <ReadlnStatement>
                <Identifier>(ID ,secondo)</Identifier>
            </ReadlnStatement>
            <AssignStatement>
                <Identifier>(ID ,tot)</Identifier>
                <Identifier>(ID ,primo)</Identifier>
            </AssignStatement>
            <AssignStatement>
                <Identifier>(ID ,tot2)</Identifier>
                <Identifier>(ID ,primo)</Identifier>
            </AssignStatement>
            <WhileStatement>
                <AssignStatement>
                    <Identifier>(ID ,i)</Identifier>
                    <ExprOpMathPlus>
                        <Identifier>(ID ,i)</Identifier>
                        <ExprOpIntConst>(INT_CONST, 1)</ExprOpIntConst>
                    </ExprOpMathPlus>
                </AssignStatement>
                <ExprOpRelopLT>
                    <Identifier>(ID ,i)</Identifier>
                    <Identifier>(ID ,secondo)</Identifier>
                </ExprOpRelopLT>
                <AssignStatement>
                    <Identifier>(ID ,tot)</Identifier>
                    <ExprOpMathPlus>
                        <Identifier>(ID ,tot)</Identifier>
                        <Identifier>(ID ,primo)</Identifier>
                    </ExprOpMathPlus>
                </AssignStatement>
                <AssignStatement>
                    <Identifier>(ID ,tot2)</Identifier>
                    <ExprOpMathTimes>
                        <Identifier>(ID ,tot2)</Identifier>
                        <Identifier>(ID ,primo)</Identifier>
                    </ExprOpMathTimes>
                </AssignStatement>
            </WhileStatement>
            <ReturnExpr>
                <Identifier>(ID ,tot)</Identifier>
                <ExprOpIntConst>(INT_CONST, 2)</ExprOpIntConst>
            </ReturnExpr>
        </BodyProc>
    </Proc>
    <Proc>
        <Identifier>(ID ,f)</Identifier>
        <ResultTypeList>
            <ResultType>
                <Type>(FLOAT)</Type>
            </ResultType>
            <ResultType>
                <Type>(FLOAT)</Type>
            </ResultType>
        </ResultTypeList>
        <BodyProc>
            <ReturnExpr>
                <ExprOpIntConst>(INT_CONST, 2)</ExprOpIntConst>
                <ExprOpIntConst>(INT_CONST, 3)</ExprOpIntConst>
            </ReturnExpr>
        </BodyProc>
    </Proc>
    <Proc>
        <Identifier>(ID ,main)</Identifier>
        <ResultTypeList>
            <ResultType>
                <Type>(VOID)</Type>
            </ResultType>
        </ResultTypeList>
        <BodyProc>
            <VarDecl>
                <Type>(INT)</Type>
                <IdInit>
                    <Identifier>(ID ,a)</Identifier>
                </IdInit>
                <IdInit>
                    <Identifier>(ID ,b)</Identifier>
                </IdInit>
            </VarDecl>
            <WriteStatement>
                <ExprOpStringConst>(STRING_CONST, ciao)</ExprOpStringConst>
                <CallProc>
                    <Identifier>(ID ,moltiplica)</Identifier>
                    <ArgumentsProc>
                        <CallProc>
                            <Identifier>(ID ,moltiplica)</Identifier>
                            <ArgumentsProc>
                                <CallProc>
                                    <Identifier>(ID ,f)</Identifier>
                                </CallProc>
                            </ArgumentsProc>
                        </CallProc>
                    </ArgumentsProc>
                </CallProc>
            </WriteStatement>
        </BodyProc>
    </Proc>
</Program>
